{"version":3,"sources":["../src/realtime.js"],"names":["define","PubSub","RealTimeEvents","params","requestscounter","pollURL","ajax","XMLHttpRequest","json","checkRequestCounter","curDate","Date","curTime","getTime","push","slice","length","publish","CONNECTION_LOST","poll","onreadystatechange","readyState","status","JSON","parse","responseText","setTimeout","timeout","success","events","i","EVENT","fromid","id","url","encodeURIComponent","userid","token","component","area","itemid","open","send","init","userId","fromId","pollURLParam","abort"],"mappings":"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","sourcesContent":["/**\n * Real time events\n *\n * @module     realtimeplugin_phppoll/realtime\n * @package    realtimeplugin_phppoll\n * @copyright  2020 Marina Glancy\n */\ndefine(['core/pubsub', 'tool_realtime/events'], function(PubSub, RealTimeEvents) {\n\n    var params;\n    var requestscounter = [];\n    var pollURL;\n    var ajax = new XMLHttpRequest(), json;\n\n    var checkRequestCounter = function() {\n        var curDate = new Date(),\n            curTime = curDate.getTime();\n        requestscounter.push(curTime);\n        requestscounter = requestscounter.slice(-10);\n        // If there were 10 requests in less than 5 seconds, it must be an error. Stop polling.\n        if (requestscounter.length >= 10 && curTime - requestscounter[0] < 5000) {\n            PubSub.publish(RealTimeEvents.CONNECTION_LOST);\n            return false;\n        }\n        return true;\n    };\n\n    var poll = function() {\n        if (!checkRequestCounter()) {\n            // Too many requests, stop polling.\n            return;\n        }\n        ajax.onreadystatechange = function() {\n            if (this.readyState === 4 && this.status === 200) {\n                if (this.status === 200) {\n                    try {\n                        json = JSON.parse(this.responseText);\n                    } catch {\n                        setTimeout(poll, params.timeout);\n                        return;\n                    }\n                    if (!json.success || json.success !== 1) {\n                        // Poll.php returned an error or an exception. Stop trying to poll.\n                        return;\n                    }\n\n                    // Process results - trigger all necessary Javascript/jQuery events.\n                    var events = json.events;\n                    for (var i in events) {\n                        PubSub.publish(RealTimeEvents.EVENT, events[i]);\n                        // Remember the last id.\n                        params.fromid = events[i].id;\n                    }\n\n                    // And start polling again.\n                    setTimeout(poll, params.timeout);\n                } else {\n                    // Must be a server timeout or loss of network - start new process.\n                    setTimeout(poll, params.timeout);\n                }\n            }\n        };\n        var url = pollURL + '?userid=' + encodeURIComponent(params.userid) + '&token=' +\n            encodeURIComponent(params.token) + '&component=' + encodeURIComponent(params.component)\n             + '&area=' + encodeURIComponent(params.area) +\n            '&itemid=' + encodeURIComponent(params.itemid) +\n            '&fromid=' + encodeURIComponent(params.fromid);\n        ajax.open('GET', url, true);\n        ajax.send();\n    };\n\n    return {\n        init: function(userId, token, component, area, itemid, fromId, pollURLParam, timeout) {\n            if (params && params.userid) {\n                // Already initialised.\n                ajax.abort();\n                params.component += ('-' + component);\n                params.area += ('-' + area);\n                params.itemid += ('-' + itemid);\n            } else {\n                params = {\n                    userid: userId,\n                    token: token,\n                    component: component,\n                    area: area,\n                    itemid: itemid,\n                    fromid: fromId,\n                    timeout: timeout,\n                };\n            }\n            pollURL = pollURLParam;\n            setTimeout(poll, timeout);\n        }\n    };\n});\n"],"file":"realtime.min.js"}