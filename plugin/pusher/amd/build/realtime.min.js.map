{"version":3,"sources":["../src/realtime.js"],"names":["define","params","subToChannel","pusher","Pusher","key","cluster","channelString","context","component","area","itemid","channel","subscribe","bind","data","channelObj","split","payload","JSON","parse","dataToSend","require","PubSub","RealTimeEvents","publish","EVENT","init","userId","app_id","secret","userid"],"mappings":"AAOAA,OAAM,kCAAC,CAAC,aAAD,CAAgB,sBAAhB,CAAD,CAA0C,UAAiC,IAEzEC,CAAAA,CAFyE,CAIzEC,CAAY,CAAG,UAAW,IACtBC,CAAAA,CAAM,CAAG,GAAIC,CAAAA,MAAJ,CAAWH,CAAM,CAACI,GAAlB,CAAuB,CAChCC,OAAO,CAAEL,CAAM,CAACK,OADgB,CAAvB,CADa,CAKtBC,CAAa,CAAGN,CAAM,CAACO,OAAP,CAAiB,GAAjB,CAAuBP,CAAM,CAACQ,SAA9B,CAA0C,GAA1C,CAAgDR,CAAM,CAACS,IAAvD,CAA8D,GAA9D,CAAoET,CAAM,CAACU,MALrE,CAOtBC,CAAO,CAAGT,CAAM,CAACU,SAAP,CAAiBN,CAAjB,CAPY,CAQ1BK,CAAO,CAACE,IAAR,CAAa,OAAb,CAAsB,SAASC,CAAT,CAAe,IAC7BC,CAAAA,CAAU,CAAGT,CAAa,CAACU,KAAd,CAAoB,GAApB,CADgB,CAE7BC,CAAO,CAAGC,IAAI,CAACC,KAAL,CAAWL,CAAX,CAFmB,CAG7BM,CAAU,CAAG,CAAC,OAAWL,CAAU,CAAC,CAAD,CAAtB,CAA2B,UAAcA,CAAU,CAAC,CAAD,CAAnD,CAAwD,KAASA,CAAU,CAAC,CAAD,CAA3E,CAAgF,QAAYE,CAA5F,CAHgB,CAIjCI,OAAO,CAAC,CAAC,aAAD,CAAgB,sBAAhB,CAAD,CAA0C,SAASC,CAAT,CAAiBC,CAAjB,CAAiC,CAC9ED,CAAM,CAACE,OAAP,CAAeD,CAAc,CAACE,KAA9B,CAAqCL,CAArC,CACH,CAFM,CAGV,CAPD,CAQH,CApB4E,CAsB7E,MAAO,CACHM,IAAI,CAAE,cAASC,CAAT,CAAiBpB,CAAjB,CAA0BC,CAA1B,CAAqCC,CAArC,CAA2CC,CAA3C,CAAmDkB,CAAnD,CAA2DxB,CAA3D,CAAgEyB,CAAhE,CAAwExB,CAAxE,CAAiF,CACnFL,CAAM,CAAG,CACL8B,MAAM,CAAEH,CADH,CAELpB,OAAO,CAAEA,CAFJ,CAGLC,SAAS,CAAEA,CAHN,CAILC,IAAI,CAAEA,CAJD,CAKLC,MAAM,CAAEA,CALH,CAMLkB,MAAM,CAAEA,CANH,CAOLxB,GAAG,CAAEA,CAPA,CAQLyB,MAAM,CAAEA,CARH,CASLxB,OAAO,CAAEA,CATJ,CAAT,CAWAJ,CAAY,EACf,CAdE,CAiBV,CAvCK,CAAN","sourcesContent":["/**\n * Real time events\n *\n * @module     realtimeplugin_phppoll/realtime\n * @package    realtimeplugin_phppoll\n * @copyright  2020 Marina Glancy\n */\ndefine(['core/pubsub', 'tool_realtime/events'], function(PubSub, RealTimeEvents) {\n\n    var params;\n\n    var subToChannel = function() {\n        var pusher = new Pusher(params.key, {\n            cluster: params.cluster\n        });\n\n        var channelString = params.context + '-' + params.component + '-' + params.area + '-' + params.itemid;\n\n        var channel = pusher.subscribe(channelString);\n        channel.bind('event', function(data) {\n            var channelObj = channelString.split('-');\n            var payload = JSON.parse(data);\n            var dataToSend = {\"itemid\" : channelObj[3], \"component\" : channelObj[1], \"area\" : channelObj[2], \"payload\" : payload};\n            require(['core/pubsub', 'tool_realtime/events'], function(PubSub, RealTimeEvents) {\n                PubSub.publish(RealTimeEvents.EVENT, dataToSend);\n            });\n        });\n    };\n\n    return {\n        init: function(userId, context, component, area, itemid, app_id, key, secret, cluster) {\n            params = {\n                userid: userId,\n                context: context,\n                component: component,\n                area: area,\n                itemid: itemid,\n                app_id: app_id,\n                key: key,\n                secret: secret,\n                cluster: cluster\n            };\n            subToChannel();\n        }\n\n    };\n});\n"],"file":"realtime.min.js"}